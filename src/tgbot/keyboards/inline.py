from aiogram import (
    types,
)
from aiogram.types import (
    WebAppInfo,
)
from aiogram.utils.i18n import (
    gettext as _,
)
from aiogram.utils.keyboard import (
    InlineKeyboardBuilder,
)


def about_project_menu() -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="üîó Github", web_app=WebAppInfo(url="https://github.com/QueGroup"))
    )
    return builder.as_markup()


def user_menu(is_profile: bool) -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if is_profile:
        builder.row(
            types.InlineKeyboardButton(text=_("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"), callback_data="user:profile"),
        )
    else:
        builder.row(
            types.InlineKeyboardButton(text=_("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"), callback_data="user:profile-create"),
        )
    builder.row(
        types.InlineKeyboardButton(text=_("–ò–∑–º–µ–Ω–∏—Ç—å"), callback_data="user:edit"),
        types.InlineKeyboardButton(text=_("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"), callback_data="user:session")
    )
    builder.row(
        types.InlineKeyboardButton(text=_("üîô –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞"), callback_data="user:signout")
    )

    return builder.as_markup()


def user_activation_menu() -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text=_("üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"), callback_data="user:activate")
    )
    return builder.as_markup()


def profile_menu() -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data="profile:edit"),
        types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="profile:delete")
    )
    builder.row(
        types.InlineKeyboardButton(text="<< –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back_to_user_menu")
    )
    return builder.as_markup()

# TODO: –ú–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å
# class HobbiesCallbackFactory(CallbackData):
#     action: str
#     hobby_name: str | None = None
#
#
# def hobbies_menu() -> types.InlineKeyboardMarkup:
#     hobbies = [
#         ("–°–ø–æ—Ä—Ç", "sports"),
#         ("–ú—É–∑—ã–∫–∞", "music"),
#         ("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "travelling"),
#         ("–ì–æ—Ç–æ–≤–∫–∞", "cooking"),
#         ("–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã", "gaming")
#     ]
#     builder = InlineKeyboardBuilder()
#
#     for hobby_name, hobby_callback in hobbies:
#         button_text = f"‚ö™Ô∏è {hobby_name}"
#         builder.button(
#             text=button_text,
#             callback_data=HobbiesCallbackFactory(action="toggle", hobby_name=hobby_callback)
#         )
#         builder.adjust(2)
#     builder.button(
#         text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä", callback_data=HobbiesCallbackFactory(action="confirm")
#     )
#     return builder.as_markup()
